// <auto-generated />
using System;
using Examportal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Examportal.Migrations
{
    [DbContext(typeof(ExamportalContext))]
    partial class ExamportalContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Examportal.Models.CandidateAnswer", b =>
                {
                    b.Property<int>("CandidateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("candidateId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompletionTime")
                        .HasColumnName("completionTime")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte?>("CorrectStatus")
                        .HasColumnName("correctStatus");

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("Id")
                        .HasColumnName("_id");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("date");

                    b.Property<byte?>("SubmitExam")
                        .HasColumnName("submitExam");

                    b.Property<string>("TestCode")
                        .HasColumnName("testCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int?>("TotalScore")
                        .HasColumnName("totalScore");

                    b.HasKey("CandidateId");

                    b.HasIndex("Email");

                    b.HasIndex("Id");

                    b.ToTable("candidateAnswer");
                });

            modelBuilder.Entity("Examportal.Models.ExamDetails", b =>
                {
                    b.Property<string>("ExamCode")
                        .HasColumnName("examCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("ExamDuration")
                        .HasColumnName("examDuration")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ExamName")
                        .HasColumnName("examName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ExamStartTime")
                        .HasColumnName("examStartTime")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("date");

                    b.HasKey("ExamCode");

                    b.HasIndex("Email");

                    b.ToTable("examDetails");
                });

            modelBuilder.Entity("Examportal.Models.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("_id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnName("answer")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("AnswerType")
                        .HasColumnName("answerType")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<string>("ExamCode")
                        .HasColumnName("examCode")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modifiedBy")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Option1")
                        .HasColumnName("option1")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Option2")
                        .HasColumnName("option2")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Option3")
                        .HasColumnName("option3")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Option4")
                        .HasColumnName("option4")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("QuestionImage")
                        .HasColumnName("questionImage")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("QuestionText")
                        .HasColumnName("questionText")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<int?>("Weightage")
                        .HasColumnName("weightage");

                    b.HasKey("Id");

                    b.HasIndex("ExamCode");

                    b.ToTable("questions");
                });

            modelBuilder.Entity("Examportal.Models.Users", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AccountType")
                        .HasColumnName("accountType")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CollegeName")
                        .HasColumnName("collegeName")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("CreatedBy")
                        .HasColumnName("createdBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnName("createdDate")
                        .HasColumnType("date");

                    b.Property<string>("ModifiedBy")
                        .HasColumnName("modifiedBy")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnName("modifiedDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasColumnName("password")
                        .HasMaxLength(200)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phoneNumber")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Email");

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasName("UQ__users__4849DA013426D3A4")
                        .HasFilter("[phoneNumber] IS NOT NULL");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Examportal.Models.CandidateAnswer", b =>
                {
                    b.HasOne("Examportal.Models.Users", "EmailNavigation")
                        .WithMany("CandidateAnswer")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK__candidate__email__73BA3083");

                    b.HasOne("Examportal.Models.Questions", "IdNavigation")
                        .WithMany("CandidateAnswer")
                        .HasForeignKey("Id")
                        .HasConstraintName("FK__candidateAn___id__72C60C4A");
                });

            modelBuilder.Entity("Examportal.Models.ExamDetails", b =>
                {
                    b.HasOne("Examportal.Models.Users", "EmailNavigation")
                        .WithMany("ExamDetails")
                        .HasForeignKey("Email")
                        .HasConstraintName("FK__examDetai__email__66603565");
                });

            modelBuilder.Entity("Examportal.Models.Questions", b =>
                {
                    b.HasOne("Examportal.Models.ExamDetails", "ExamCodeNavigation")
                        .WithMany("Questions")
                        .HasForeignKey("ExamCode")
                        .HasConstraintName("FK__questions__examC__693CA210");
                });
#pragma warning restore 612, 618
        }
    }
}
